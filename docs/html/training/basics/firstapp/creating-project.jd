page.title=Creating an Android Project
parent.title=Building Your First App
parent.link=index.html

trainingnavtop=true
next.title=Running Your App
next.link=running-app.html

@jd:body


<!-- This is the training bar -->
<div id="tb-wrapper"> 
<div id="tb"> 
 
<h2>This lesson teaches you to</h2>

<ol>
  <li><a href="#Eclipse">Create a Project with Eclipse</a></li>
  <li><a href="#CommandLine">Create a Project with Command Line Tools</a></li>
</ol>

<h2>You should also read</h2>

<ul>
  <li><a href="{@docRoot}sdk/installing/index.html">Installing the
SDK</a></li>
  <li><a href="{@docRoot}tools/projects/index.html">Managing Projects</a></li>
</ul>
 
 
</div> 
</div> 

<p>An Android project contains all the files that comprise the source code for your Android
app. The Android SDK tools make it easy to start a new Android project with a set of
default project directories and files.</p> 

<p>This lesson
shows how to create a new project either using Eclipse (with the ADT plugin) or using the
SDK tools from a command line.</p>

<p class="note"><strong>Note:</strong> You should already have the Android SDK installed, and if
you're using Eclipse, you should have installed the <a
href="{@docRoot}tools/sdk/eclipse-adt.html">ADT plugin</a> as well. If you have not installed
these, see <a href="{@docRoot}sdk/installing/index.html">Installing the Android SDK</a> and return here
when you've completed the installation.</p>


<h2 id="Eclipse">Create a Project with Eclipse</h2>

<div class="figure" style="width:416px">
<img src="{@docRoot}images/training/firstapp/adt-firstapp-setup.png" alt="" />
<p class="img-caption"><strong>Figure 1.</strong> The new project wizard in Eclipse.</p>
</div>

<ol>
  <li>In Eclipse, select <strong>File &gt; New &gt; Project</strong>.
The resulting dialog should have a folder labeled <em>Android</em>.  (If you don’t see the
<em>Android</em> folder,
then you have not installed the ADT plugin&mdash;see <a
href="{@docRoot}tools/sdk/eclipse-adt.html#installing">Installing the ADT Plugin</a>).</li>
  <li>Open the <em>Android</em> folder, select <em>Android Project</em> and click
<strong>Next</strong>.</li>
  <li>Enter a project name (such as "MyFirstApp") and click <strong>Next</strong>.</li>
  <li>Select a build target. This is the platform version against which you will compile your app.
<p>We recommend that you select the latest version possible. You can still build your app to
support older versions, but setting the build target to the latest version allows you to
easily optimize your app for a great user experience on the latest Android-powered devices.</p>
<p>If you don't see any built targets listed, you need to install some using the Android SDK
Manager tool. See <a href="{@docRoot}sdk/installing/index.html#AddingComponents">step 4 in the
installing guide</a>.</p>
<p>Click <strong>Next</strong>.</p></li>
  <li>Specify other app details, such as the:
    <ul>
      <li><em>Application Name</em>: The app name that appears to the user. Enter "My First
App".</li>
      <li><em>Package Name</em>: The package namespace for your app (following the same
rules as packages in the Java programming language). Your package name
must be unique across all packages installed on the Android system. For this reason, it's important
that you use a standard domain-style package name that’s appropriate to your company or
publisher entity. For
your first app, you can use something like "com.example.myapp." However, you cannot publish your
app using the "com.example" namespace.</li>
      <li><em>Create Activity</em>: This is the class name for the primary user activity in your
app (an activity represents a single screen in your app). Enter "MyFirstActivity".</li>
      <li><em>Minimum SDK</em>: Select <em>4 (Android 1.6)</em>.
        <p>Because this version is lower than the build target selected for the app, a warning
appears, but that's alright. You simply need to be sure that you don't use any APIs that require an
<a href="{@docRoot}guide/topics/manifest/uses-sdk-element.html#ApiLevels">API level</a> greater than the minimum SDK
version without first using some code to verify the device's system version (you'll see this in some
other classes).</p>
      </li>
    </ul>
    <p>Click <strong>Finish</strong>.</p>
  </li>
</ol>

<p>Your Android project is now set up with some default files and you’re ready to begin
building the app. Continue to the <a href="running-app.html">next lesson</a>.</p>



<h2 id="CommandLine">Create a Project with Command Line Tools</h2>

<p>If you're not using the Eclipse IDE with the ADT plugin, you can instead create your project
using the SDK tools in a command line:</p>

<ol>
  <li>Change directories into the Android SDK’s <code>tools/</code> path.</li>
  <li>Execute:
<pre class="no-pretty-print">android list targets</pre>
<p>This prints a list of the available Android platforms that you’ve downloaded for your SDK. Find
the platform against which you want to compile your app. Make a note of the target id. We
recommend that you select the highest version possible. You can still build your app to
support older versions, but setting the build target to the latest version allows you to optimize
your app for the latest devices.</p>
<p>If you don't see any targets listed, you need to
install some using the Android SDK
Manager tool. See <a href="{@docRoot}sdk/installing/index.html#AddingComponents">step 4 in the
installing guide</a>.</p></li>
  <li>Execute:
<pre class="no-pretty-print">
android create project --target &lt;target-id> --name MyFirstApp \
--path &lt;path-to-workspace>/MyFirstApp --activity MyFirstActivity \
--package com.example.myapp
</pre>
<p>Replace <code>&lt;target-id></code> with an id from the list of targets (from the previous step)
and replace
<code>&lt;path-to-workspace></code> with the location in which you want to save your Android
projects.</p></li>
</ol>

<p>Your Android project is now set up with several default configurations and you’re ready to begin
building the app. Continue to the <a href="running-app.html">next lesson</a>.</p>

<p class="note"><strong>Tip:</strong> Add the <code>platform-tools/</code> as well as the
<code>tools/</code> directory to your <code>PATH</code> environment variable.</p>




